/**
 * 
 * 
判断一个 9x9 的数独是否有效。只需要根据以下规则，验证已经填入的数字是否有效即可。
数字 1-9 在每一行只能出现一次。
数字 1-9 在每一列只能出现一次。
数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。


数独部分空格内已填入了数字，空白格用 '.' 表示。

示例 1:

输入:
[
  ["5","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
输出: true
示例 2:

输入:
[
  ["8","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
输出: false
解释: 除了第一行的第一个数字从 5 改为 8 以外，空格内其他数字均与 示例1 相同。
     但由于位于左上角的 3x3 宫内有两个 8 存在, 因此这个数独是无效的。
 * 
 */
const verifyByPoint = (originArr,point1,point2)=>{
    console.log('start point',point1,'end point', point2)
    let tempObj = {}
    for(let i = point1.x; i<= point2.x; i++){
        for(let j = point1.y; j <= point2.y; j++){
            let item = originArr[i][j];
            if(Number(item)){
                if(tempObj[item]){
                    console.log('cuurent temp obj is', tempObj)
                    console.log('duplicate number is ', {x:i,y:j},originArr[i][j])
                    return false
                }else{
                    tempObj[item] = true
                }
            }
        }
    }
    return true
}

const test = (board)=>{
    const length = 9;
    for(let i = 0; i<length; i++){
        console.log('==== verify row %s=====',i)
        let flag = verifyByPoint(board, {x: i, y: 0} , {x: i, y: length-1})
        if(!flag)return false;
        console.log('==== verify column %s=====',i)
        flag = verifyByPoint(board, {x: 0, y: i} , {x: length-1, y:i})
        if(!flag)return false;
        if(flag && i % 3 == 0){
            for(let j = 0; j < length; j+=3){
                console.log('==== verify matirx =====')
                flag = verifyByPoint(board, {x: i, y: j} , {x: i+2, y:j+2})
                if(!flag)return false;
            }
        }
    }
    return true;
}

// var board = [
//     [".",".","4",   ".",".",".",    "6","3","."],
//     [".",".",".",   ".",".",".",    ".",".","."],
//     ["5",".",".",   ".",".",".",    ".","9","."],

//     [".",".",".",   "5","6",".",    ".",".","."],
//     ["4",".","3",   ".",".",".",    ".",".","1"],
//     [".",".",".",   "7",".",".",    ".",".","."],

//     [".",".",".",   "5",".",".",    ".",".","."],
//     [".",".",".",   ".",".",".",    ".",".","."],
//     [".",".",".",   ".",".",".",    ".",".","."]
// ]


var board = [["5","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["8",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]]
  console.log(test(board))